# Define an alias for the specific Python version
FROM python:3.11.9-slim-bullseye as python

# Python build stage
FROM python as python-build-stage

# Install apt packages
RUN apt-get update && apt-get install --no-install-recommends -y \
    # dependencies for building Python packages
    build-essential \
    # psycopg2 dependencies
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Requirements are installed here to ensure they will be cached
COPY requirements/base.txt ./base.txt
COPY requirements/dev.txt ./dev.txt

# Create Python Dependency and Sub-Dependency Wheels
RUN pip wheel --wheel-dir /usr/src/app/wheels \
    -r dev.txt

# Python 'run' stage
FROM python as python-run-stage

ARG APP_HOME=/app

ENV PYTHONUNBUFFERED 1
ENV PYTHONDONTWRITEBYTECODE 1

WORKDIR ${APP_HOME}

# Install required system dependencies
RUN apt-get update && apt-get install --no-install-recommends -y \
    # psycopg2 dependencies
    libpq-dev \
    # Translations dependencies
    gettext \
    # Development tools
    curl \
    vim \
    # Network tools
    netcat-traditional \
    && rm -rf /var/lib/apt/lists/*

# Copy python dependency wheels from python-build-stage
COPY --from=python-build-stage /usr/src/app/wheels /wheels/

# Use wheels to install python dependencies
RUN pip install --no-cache-dir --no-index --find-links=/wheels/ /wheels/* \
    && rm -rf /wheels/

# Copy entrypoint and start scripts
COPY backend/scripts/entrypoint.sh /entrypoint.sh
RUN sed -i 's/\r$//g' /entrypoint.sh
RUN chmod +x /entrypoint.sh

COPY backend/scripts/start-dev.sh /start-dev.sh
RUN sed -i 's/\r$//g' /start-dev.sh
RUN chmod +x /start-dev.sh

# Copy project files
COPY manage.py .
COPY backend/ ./backend/

ENTRYPOINT ["/entrypoint.sh"] 